

#include "HLSLLaboratory.h"


HLSLLaboratory::HLSLLaboratory(void)
{
}


HLSLLaboratory::~HLSLLaboratory(void)
{
	//Call onLostDevice() about all graphics items
	releaseAll();
}

//////////////////////////////////////////////////////////////////////////////
//Initialize game
//If error, throw GameError
//////////////////////////////////////////////////////////////////////////////
void HLSLLaboratory::initialize(HWND hwnd)
{
	Game::initialize(hwnd);	//throw GameError

	return;
}

//////////////////////////////////////////////////////////////////////////////
//update all game items
//////////////////////////////////////////////////////////////////////////////
void HLSLLaboratory::update()
{
}

//////////////////////////////////////////////////////////////////////////////
//Artificial intelligence
//////////////////////////////////////////////////////////////////////////////
void HLSLLaboratory::ai()
{
}

//////////////////////////////////////////////////////////////////////////////
//work collisions
//////////////////////////////////////////////////////////////////////////////
void HLSLLaboratory::collisions()
{
}

//////////////////////////////////////////////////////////////////////////////
//Render game items
//////////////////////////////////////////////////////////////////////////////
void HLSLLaboratory::render()
{
}

//////////////////////////////////////////////////////////////////////////////
//If graphics device lost,
//release all video memories to be able to reset graphics devices
//////////////////////////////////////////////////////////////////////////////
void HLSLLaboratory::releaseAll()
{
	Game::releaseAll();
	return;
}

//////////////////////////////////////////////////////////////////////////////
//If graphics devices are reset,
//remake all surfaces
//////////////////////////////////////////////////////////////////////////////
void HLSLLaboratory::resetAll()
{
	Game::resetAll();
}